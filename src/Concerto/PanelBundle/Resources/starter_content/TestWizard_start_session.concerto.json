{
    "version": "5.0.beta.2.168",
    "collection": [
        {
            "class_name": "Test",
            "id": 3,
            "name": "source_start_session",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "library(digest)\n\nif(is.null(template_def) || is.na(template_def) || template_def == \"\") {\n  decoded_template_def = fromJSON(concerto.var.get(\"template_def\"))\n} else {\n  decoded_template_def = fromJSON(template_def)\n}\n\ngetContent = function() {\n  content = paragraph\n\n  if(!is.na(type) && type == \"table\") {\n    login_control = concerto.template.join(templateId=\"form_field_input\", params=list(id=\"login\",name=\"login\",type=\"text\",value=\"\"))\n    password_control = concerto.template.join(templateId=\"form_field_input\", params=list(id=\"password\",name=\"password\",type=\"password\",value=\"\"))\n    login = concerto.template.join(templateId=\"form_field\", params=list(id=\"login\",label=\"login\",classes=\"\",control=login_control))\n    password = concerto.template.join(templateId=\"form_field\", params=list(id=\"password\",label=\"password\",classes=\"\",control=password_control))\n    content = paste0(content, login, password)\n  }\n\n  return(content)\n}\n\nauthorizeUser = function(response) {\n  ub = fromJSON(user_bank)\n\n  if(!is.na(type) && type == \"table\") {\n    if(ub$table_type == \"direct\") {\n      users = ub$direct_table\n      if(length(users) > 0) {\n        for(i in 1:length(users)) {\n          user = users[[i]]\n          hashed_pass = response$password\n          if(user$encryption != \"plain\") {\n            hashed_pass = digest(hashed_pass, user$encryption, serialize=F)\n          }\n          if(user$login == response$login && user$password == hashed_pass && user$enabled == 1) {\n            rm(users)\n            return(user)\n          }\n        }\n      }\n      rm(users)\n    } \n    if(ub$table_type == \"default\") {\n      users = concerto.table.query(\"SELECT * FROM default_user_table WHERE data_set_id = '{{data_set_id}}'\", list(\n        data_set_id = dbEscapeStrings(concerto$connection, toString(ub$data_set_id))\n      ))\n      if(dim(users)[1] > 0) {\n        for(i in 1:dim(users)[1]) {\n          user = as.list(users[i,])\n          hashed_pass = response$password\n          if(user$encryption != \"plain\") {\n            hashed_pass = digest(hashed_pass, user$encryption, serialize=F)\n          }\n          if(user$login == response$login && user$password == hashed_pass && user$enabled == 1) {\n            rm(users)\n            return(user)\n          }\n        }\n      }\n      rm(users)\n    } \n    if(ub$table_type == \"custom\") {\n      users = concerto.table.query(\"SELECT * FROM {{table}} WHERE {{data_set_id_column}} = {{data_set_id}}\", list(\n        table=ub$custom_table$table, \n        data_set_id_column=ub$custom_table$columns$data_set_id, \n        data_set_id=ub$data_set_id\n      ))\n      if(dim(users)[1] > 0) {\n        for(i in 1:dim(users)[1]) {\n          user = list(\n            id=users[i, \"id\"],\n            login=users[i, ub$custom_table$columns$login],\n            password=users[i, ub$custom_table$columns$password],\n            encryption=users[i, ub$custom_table$columns$encryption],\n            email=users[i,ub$custom_table$columns$email],\n            enabled=users[i, ub$custom_table$columns$enabled]\n          )\n          hashed_pass = response$password\n          if(user$encryption != \"plain\") {\n            hashed_pass = digest(hashed_pass, user$encryption, serialize=F)\n          }\n          if(user$login == response$login && user$password == hashed_pass && user$enabled == 1) {\n            rm(users)\n            return(user)\n          }\n        }\n      }\n      rm(users)\n    }\n  }\n  return(NULL)\n}\n\ncreateSession = function(user) {\n  sb = fromJSON(session_bank)\n  user_id = NULL\n  if(!is.null(user)) { user_id = user$id }\n\n  if(sb$table_type == \"default\") {\n    concerto.table.query(\"INSERT INTO `default_session_table` SET `internal_id` = '{{internal_id}}', `test_id` = {{test_id}}, `user_id` = '{{user_id}}'\", list(\n      internal_id=concerto$session$id, \n      test_id=concerto$mainTest$id, \n      user_id=user_id\n    ))\n  } \n  if(sb$table_type == \"custom\") {\n    concerto.table.query(\"INSERT INTO `{{table}}` SET `{{iternal_id_column}}` = '{{internal_id}}', `{{test_id_column}}` = {{test_id}}, `{{user_id_column}}` = '{{user_id}}'\", list(\n      table=sb$custom_table$table, \n      iternal_id_column=sb$custom_table$columns$session_internal_id, \n      internal_id=concerto$session$id, \n      test_id_column=sb$custom_table$columns$test_id, \n      test_id=concerto$mainTest$id, \n      user_id_column=sb$custom_table$columns$user_id, \n      user_id=user_id\n    ))\n  }\n  return(list(id=concerto.table.lastInsertId(), test_id=concerto$mainTest$id, user_id=user_id))\n}\n\ndoesLoginExists = function(login) {\n  ub = fromJSON(user_bank)\n\n  if(!is.na(type) && type == \"table\") {\n    if(ub$table_type == \"default\") {\n      users = concerto.table.query(\"SELECT * FROM default_user_table WHERE data_set_id = '{{data_set_id}}' AND login = '{{login}}'\", list(\n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        login=dbEscapeStrings(concerto$connection, toString(login))\n      ))\n      if(dim(users)[1] > 0) {\n        return(TRUE)\n      }\n    } \n    if(ub$table_type == \"custom\") {\n      users = concerto.table.query(\"SELECT * FROM {{table}} WHERE {{data_set_id_column}} = '{{data_set_id}}' AND {{login_column}} = '{{login}}'\", list(\n        table=ub$custom_table$table, \n        data_set_id_column=ub$custom_table$columns$data_set_id, \n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        login_column=ub$custom_table$columns$login, \n        login=dbEscapeStrings(concerto$connection, toString(login))\n      ))\n      if(dim(users)[1] > 0) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n\ncreateNewUser = function(login, password, email, enabled) {\n  ub = fromJSON(user_bank)\n  encryption = \"sha1\"\n\n  if(!is.na(type) && type == \"table\") {\n    if(ub$table_type == \"default\") {\n      users = concerto.table.query(\"INSERT INTO default_user_table SET data_set_id='{{data_set_id}}', login='{{login}}', password='{{password}}', encryption='{{encryption}}', email='{{email}}', enabled='{{enabled}}'\", list(\n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        login=dbEscapeStrings(concerto$connection, toString(login)),\n        password=dbEscapeStrings(concerto$connection, toString(digest(password, encryption, serialize=F))),\n        encryption=dbEscapeStrings(concerto$connection, toString(encryption)),\n        email=dbEscapeStrings(concerto$connection, toString(email)),\n        enabled=dbEscapeStrings(concerto$connection, toString(enabled))\n      ))\n    } \n    if(ub$table_type == \"custom\") {\n      users = concerto.table.query(\"INSERT INTO {{table}} SET {{data_set_id_column}}='{{data_set_id}}', {{login_column}}='{{login}}', {{password_column}}='{{password}}', {{encryption_column}}='{{encryption}}', {{email_column}}='{{email}}', {{enabled_column}}='{{enabled}}'\", list(\n        table=ub$custom_table$name, \n        data_set_id_column=ub$custom_table$columns$data_set_id, \n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        login_column=ub$custom_table$columns$login, \n        login=dbEscapeStrings(concerto$connection, toString(login)),\n        password_column=ub$custom_table$columns$password, \n        password=dbEscapeStrings(concerto$connection, toString(digest(password, encryption, serialize=F))),\n        encryption_column=ub$custom_table$columns$encryption, \n        encryption=dbEscapeStrings(concerto$connection, toString(encryption)),\n        email_column=ub$custom_table$columns$email, \n        email=dbEscapeStrings(concerto$connection, toString(email)),\n        enabled_column=ub$custom_table$columns$enabled, \n        enabled=dbEscapeStrings(concerto$connection, toString(enabled))\n      ))\n    }\n    return(concerto.table.lastInsertId())\n  }\n  return(NULL)\n}\n\nsendConfirmationMail = function(uid, email, smtp_host, smtp_port, sender, subject, paragraph, url){\n  library(mailR)\n\n  url = concerto.template.insertParams(url, params=list(ecuid=uid))\n  recipients = c(email)\n  body = concerto.template.join(templateId=\"start_session_confirmation_mail\",params=list(url=url,paragraph=paragraph))\n\n  send.mail(\n    from = sender,\n    to = recipients,\n    subject = subject,\n    body = body,\n    smtp = list(host.name = smtp_host, port = smtp_port),\n    html = TRUE, \n    inline = TRUE,\n    authenticate = FALSE,\n    send = TRUE\n  )\n}\n\nenableUser = function(uid) {\n  ub = fromJSON(user_bank)\n\n  if(!is.na(type) && type == \"table\") {\n    if(ub$table_type == \"default\") {\n      users = concerto.table.query(\"UPDATE default_user_table SET enabled='{{enabled}}' WHERE data_set_id='{{data_set_id}}' AND id={{id}}\", list(\n        enabled=1,\n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        id=uid\n      ))\n    } \n    if(ub$table_type == \"custom\") {\n      users = concerto.table.query(\"UPDATE {{table}} SET {{enabled_column}}='{{enabled}}' WHERE {{data_set_id_column}}='{{data_set_id}}' AND id={{id}}'\", list(\n        table=ub$custom_table$table, \n        enabled_column=ub$custom_table$columns$enabled, \n        enabled=1,\n        data_set_id_column=ub$custom_table$columns$data_set_id, \n        data_set_id=dbEscapeStrings(concerto$connection, toString(ub$data_set_id)),\n        id=uid\n      ))\n    }\n  }\n}\n\nreg = fromJSON(registration)\n#email confirmation\nif(!is.na(ecuid) && !is.null(ecuid) && ecuid != \"\"){\n  enableUser(ecuid)\n  concerto.test.run(reg$info_test, params=list(\n    template=decoded_template_def$layout,\n    header=decoded_template_def$header,\n    title=reg$ec_successful_page$title,\n    content=reg$ec_successful_page$content,\n    footer=decoded_template_def$footer,\n    button_exists=\"0\"\n  ))\n}\n\nuser = NULL\nemail_confirmation = FALSE\nif(!is.na(type) && type==\"table\") {\n  buttons = concerto.template.join(templateId=\"buttons_start_session_login\",params=list(\n    label_login=button_label,\n    label_register=reg$registration_button_label,\n    show_register= if(reg$enabled == \"1\") {\"true\"} else {\"false\"}\n  ))\n  warning_msg = \"\"\n  response = NULL\n  while(T) {\n    content = getContent()\n    response = concerto.template.show(decoded_template_def$layout, params=list(\n      header=decoded_template_def$header, \n      title=title, \n      content=content, \n      warning_msg=warning_msg, \n      buttons=buttons,\n      footer=decoded_template_def$footer\n    ))  \n    if(response$buttonPressed == \"login\") {\n      user = authorizeUser(response)\n      if(is.null(user)) {\n        warning_msg = concerto.template.join(templateId=\"form_alert\",params=list(alert=failed_alert))\n      } else {\n        break\n      }\n    }\n    if(response$buttonPressed == \"register\") {\n      reg_warning_msg = \"\"\n      result = NULL\n      while(T) {\n        result = concerto.test.run(reg$form_test, params=list(\n          template=decoded_template_def$layout,\n          header=decoded_template_def$header,\n          title=reg$title, \n          paragraph=reg$paragraph,\n          footer=decoded_template_def$footer,\n          form=toJSON(\n            list(\n              list(name=\"login\", definition=list(type=\"singleline\"), label=reg$login_label, validation=\"login!=''\", alert=reg$login_alert),\n              list(name=\"password\", definition=list(type=\"password\"), label=reg$password_label, validation=\"password!=''\", alert=reg$password_alert),\n              list(name=\"password_confirmation\", definition=list(type=\"password\"), label=reg$password_confirmation_label, validation=\"password==password_confirmation\", alert=reg$password_confirmation_alert),\n              list(name=\"email\", definition=list(type=\"singleline\"), label=reg$email_label, validation=\"email!=''\", alert=reg$email_alert)\n            )\n          ),\n          warning_msg = reg_warning_msg,\n          button_label=reg$form_button_label\n        ));\n\n        if(!doesLoginExists(result$response$login)) {\n          break\n        } else {\n          reg_warning_msg = reg$login_exists_alert\n        }\n      }\n      email_confirmation = reg$email_confirmation == \"1\"\n      enabled = \"1\"\n      if(email_confirmation) { \n        enabled == \"0\" \n      }\n      uid = createNewUser(result$response$login, result$response$password, result$response$email, enabled)\n      if(email_confirmation) { \n        sendConfirmationMail(uid, result$response$email, reg$ec_smtp$host, reg$ec_smtp$port, reg$ec_email$sender, reg$ec_email$subject, reg$ec_email$paragraph, reg$ec_email$url)\n        concerto.test.run(reg$info_test, params=list(\n          template=decoded_template_def$layout,\n          header=decoded_template_def$header,\n          title=reg$ec_request_page$title,\n          content=reg$ec_request_page$content,\n          footer=decoded_template_def$footer,\n          button_exists=\"0\"\n        ))\n      }\n      user = authorizeUser(list(login=result$response$login, result$response$password))\n      break\n    }\n  }\n}\n\nsession = createSession(user)",
            "resumable": "0",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 33,
                    "name": "success",
                    "type": 2,
                    "description": "<p>Authorization successful<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 34,
                    "name": "paragraph",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 35,
                    "name": "failed_alert",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 36,
                    "name": "button_label",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 37,
                    "name": "type",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 38,
                    "name": "user",
                    "type": 1,
                    "description": "<p>Returned user object list:<\/p>\n\n<ul>\n\t<li><strong>user$id<\/strong>&nbsp;- user unique id<\/li>\n\t<li><strong>user$login&nbsp;<\/strong>- user login<\/li>\n<\/ul>\n",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 39,
                    "name": "user_bank",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 40,
                    "name": "user_bank",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 41,
                    "name": "session_bank",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 42,
                    "name": "session",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 43,
                    "name": "session_bank",
                    "type": 1,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 44,
                    "name": "registration",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 45,
                    "name": "ecuid",
                    "type": 0,
                    "description": "<p>Email confirmation user id<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 46,
                    "name": "title",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 47,
                    "name": "template_def",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 3,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2016-11-21 19:40:42",
            "updatedByName": "",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": false,
            "rev": 5,
            "hash": "8c601541ea78c4a9457dc5142ec7b408d80acaef"
        },
        {
            "class_name": "TestWizard",
            "id": 3,
            "name": "start_session",
            "description": "",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 62,
                    "title": "Session",
                    "description": "<p>Session data source<\/p>\n",
                    "orderNum": 1,
                    "colsNum": 0,
                    "wizard": 3,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 191,
                            "label": "Session bank",
                            "description": "<p>Session table definition:<\/p>\n\n<ul>\n\t<li><strong>default<\/strong>&nbsp;- uses default session table<\/li>\n\t<li><strong>custom&nbsp;<\/strong>- define your own session table<\/li>\n<\/ul>\n",
                            "hideCondition": "",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"table_type\":\"default\",\"custom_table\":{},\"custom_user_id_login\":{\"table\":null},\"custom_test_id_column\":{}}",
                            "testVariable": 41,
                            "name": "session_bank",
                            "wizardStep": 62,
                            "stepTitle": "Session",
                            "order": 0,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": "3",
                                        "name": "table_type",
                                        "label": "Type",
                                        "definition": {
                                            "options": [
                                                {
                                                    "value": "default",
                                                    "label": "default"
                                                },
                                                {
                                                    "value": "custom",
                                                    "label": "custom"
                                                }
                                            ],
                                            "defvalue": "default"
                                        },
                                        "order": 0
                                    },
                                    {
                                        "type": 12,
                                        "name": "custom_table",
                                        "label": "Table",
                                        "hideCondition": "parent.table_type != \"custom\"",
                                        "order": 1,
                                        "definition": {
                                            "placeholder": 0,
                                            "cols": [
                                                {
                                                    "name": "user_id",
                                                    "label": "User id",
                                                    "tooltip": "User id column"
                                                },
                                                {
                                                    "name": "test_id",
                                                    "label": "Test id",
                                                    "tooltip": "Test id column"
                                                },
                                                {
                                                    "name": "session_internal_id",
                                                    "label": "Session internal id",
                                                    "tooltip": "Session internal id column"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "class_name": "TestWizardStep",
                    "id": 63,
                    "title": "Authorization",
                    "description": "<p>Authorization options<\/p>\n",
                    "orderNum": 2,
                    "colsNum": 0,
                    "wizard": 3,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 192,
                            "label": "Paragraph",
                            "description": "<p><span style=\"line-height: 20.8px;\">Authorization page paragraph<\/span><\/p>\n",
                            "hideCondition": "!values.type",
                            "type": 2,
                            "passableThroughUrl": "0",
                            "value": "<p>Please log in:<\/p>\n",
                            "testVariable": 34,
                            "name": "paragraph",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 3,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 193,
                            "label": "Failed alert",
                            "description": "<p>Authorization failed alert<\/p>\n",
                            "hideCondition": "!values.type",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "Authorization failed!",
                            "testVariable": 35,
                            "name": "failed_alert",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 4,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 194,
                            "label": "Button label",
                            "description": "<p>Login button label<\/p>\n",
                            "hideCondition": "!values.type",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "log in",
                            "testVariable": 36,
                            "name": "button_label",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 5,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 195,
                            "label": "Type",
                            "description": "<p>Authorization type<\/p>\n\n<ul>\n\t<li><strong>user table<\/strong>&nbsp;- predefined user bank that let&#39;s users log in using login\/password combination<\/li>\n<\/ul>\n",
                            "hideCondition": "",
                            "type": 3,
                            "passableThroughUrl": "0",
                            "value": "table",
                            "testVariable": 37,
                            "name": "type",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 0,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0",
                                "options": [
                                    {
                                        "value": "table",
                                        "label": "user table"
                                    }
                                ],
                                "defvalue": "table"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 196,
                            "label": "User bank",
                            "description": "<p style=\"line-height: 20.8px;\">User bank table type:<\/p>\n\n<ul style=\"line-height: 20.8px;\">\n\t<li><strong>default&nbsp;<\/strong>- uses default Concerto table; user needs to be inserted first<\/li>\n\t<li><strong>direct<\/strong>&nbsp;- can be defined directly in wizard form<\/li>\n\t<li><strong>custom<\/strong>&nbsp;- used to define your own table that you want to use as user bank<\/li>\n<\/ul>\n",
                            "hideCondition": "!values.type",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"table_type\":\"default\",\"direct_table\":[],\"custom_table\":{},\"custom_login_column\":{},\"custom_password_column\":{},\"custom_encryption_column\":{},\"custom_test_id_column\":{},\"data_set_id\":\"\"}",
                            "testVariable": 39,
                            "name": "user_bank",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 6,
                            "wizard": 3,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": "3",
                                        "name": "table_type",
                                        "label": "Table type",
                                        "definition": {
                                            "options": [
                                                {
                                                    "value": "default",
                                                    "label": "default"
                                                },
                                                {
                                                    "value": "direct",
                                                    "label": "direct"
                                                },
                                                {
                                                    "value": "custom",
                                                    "label": "custom"
                                                }
                                            ],
                                            "defvalue": "default"
                                        },
                                        "order": 0
                                    },
                                    {
                                        "type": "10",
                                        "name": "direct_table",
                                        "label": "Users",
                                        "definition": {
                                            "element": {
                                                "type": 9,
                                                "definition": {
                                                    "fields": [
                                                        {
                                                            "type": "0",
                                                            "name": "id",
                                                            "label": "Id"
                                                        },
                                                        {
                                                            "type": "0",
                                                            "name": "login",
                                                            "label": "Login"
                                                        },
                                                        {
                                                            "type": "0",
                                                            "name": "password",
                                                            "label": "Password"
                                                        },
                                                        {
                                                            "type": "3",
                                                            "name": "encryption",
                                                            "label": "Encryption",
                                                            "definition": {
                                                                "options": [
                                                                    {
                                                                        "value": "plain",
                                                                        "label": "plain"
                                                                    },
                                                                    {
                                                                        "value": "md5",
                                                                        "label": "md5"
                                                                    },
                                                                    {
                                                                        "value": "sha1",
                                                                        "label": "sha1"
                                                                    },
                                                                    {
                                                                        "value": "sha256",
                                                                        "label": "sha256"
                                                                    },
                                                                    {
                                                                        "value": "sha512",
                                                                        "label": "sha512"
                                                                    },
                                                                    {
                                                                        "value": "xxhash32",
                                                                        "label": "xxhash32"
                                                                    },
                                                                    {
                                                                        "value": "xxhash64",
                                                                        "label": "xxhash64"
                                                                    },
                                                                    {
                                                                        "value": "murmur32",
                                                                        "label": "murmur32"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "email",
                                                            "label": "Email",
                                                            "definition": {
                                                                "placeholder": 0
                                                            }
                                                        },
                                                        {
                                                            "type": 4,
                                                            "name": "enabled",
                                                            "label": "Enabled",
                                                            "definition": {
                                                                "placeholder": 0
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "hideCondition": "parent.table_type != \"direct\"",
                                        "order": 2
                                    },
                                    {
                                        "type": 12,
                                        "name": "custom_table",
                                        "label": "Custom user table",
                                        "hideCondition": "parent.table_type != \"custom\"",
                                        "definition": {
                                            "placeholder": 0,
                                            "cols": [
                                                {
                                                    "name": "login",
                                                    "label": "Login",
                                                    "tooltip": "Login column"
                                                },
                                                {
                                                    "name": "password",
                                                    "label": "Password",
                                                    "tooltip": "Password column"
                                                },
                                                {
                                                    "name": "encryption",
                                                    "label": "Encryption",
                                                    "tooltip": "Encryption column"
                                                },
                                                {
                                                    "name": "data_set_id",
                                                    "label": "Data set id",
                                                    "tooltip": "Data set id column"
                                                },
                                                {
                                                    "name": "email",
                                                    "label": "Email",
                                                    "tooltip": "Email column"
                                                },
                                                {
                                                    "name": "enabled",
                                                    "label": "Enabled",
                                                    "tooltip": "Enabled column"
                                                }
                                            ]
                                        },
                                        "order": 2
                                    },
                                    {
                                        "type": 0,
                                        "name": "data_set_id",
                                        "label": "Data set id",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.table_type == \"direct\"",
                                        "order": 1
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 197,
                            "label": "Public registration",
                            "description": "",
                            "hideCondition": "!values.type",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"enabled\":\"0\",\"layout\":\"default_layout\",\"header\":\"<p><strong>Welcome to demo test<\/strong><\/p>\\n\",\"paragraph\":\"<p>Please fill the form below to register.<\/p>\\n\",\"password_alert\":\"You need to enter your password!\",\"login_label\":\"Login\",\"login_alert\":\"You need to enter your login!\",\"password_label\":\"Password\",\"password_confirmation_label\":\"Password confirmation\",\"password_confirmation_match_alert\":\"Password and password confirmation must match!\",\"email_label\":\"Email\",\"email_alert\":\"You need to enter your email!\",\"form_button_label\":\"register\",\"registration_button_label\":\"registration\",\"password_confirmation_alert\":\"Password and password confirmation must match!\",\"login_exists_alert\":\"Login already exists!\",\"email_confirmation\":\"0\",\"ec_smtp\":{\"host\":\"aspmx.l.google.com\",\"port\":\"25\"},\"ec_page\":{\"layout\":\"default_layout\",\"header\":\"<p><strong>Email confirmation<\/strong><\/p>\\n\",\"paragraph\":\"<p>Email has been sent to specified address for confirmation. Please check your inbox.<\/p>\\n\",\"content\":\"<p>Email has bee sent to the address specified. Please check your inbox.<\/p>\\n\"},\"ec_email\":{\"sender\":\"no-reply@domain.com\",\"subject\":\"Email confirmation\",\"paragraph\":\"<p>Please follow link below to confirm your email address:<\/p>\\n\",\"url\":\"http:\/\/domain.com\/test\/slug\/start?ecuid={{ecuid}}\"},\"ec_successful_page\":{\"layout\":\"default_layout\",\"header\":\"<p>Email confirmation<\/p>\\n\",\"content\":\"<p>Email confirmation has been successfuly completed.<\/p>\\n\",\"title\":\"Registration\"},\"ec_request_page\":{\"layout\":\"default_layout\",\"header\":\"<p>Email confirmation<\/p>\\n\",\"content\":\"<p>Confirmation email has been sent to specified address. Please check your inbox.<\/p>\\n\",\"title\":\"Registration\"},\"info_test\":\"info\",\"form_test\":\"form\",\"title\":\"Registration\"}",
                            "testVariable": 44,
                            "name": "registration",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 7,
                            "wizard": 3,
                            "definition": {
                                "fields": [
                                    {
                                        "type": 4,
                                        "name": "enabled",
                                        "label": "Enabled",
                                        "definition": {
                                            "placeholder": 0,
                                            "defvalue": "0"
                                        },
                                        "order": 0
                                    },
                                    {
                                        "type": 2,
                                        "name": "paragraph",
                                        "label": "Paragraph",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 4
                                    },
                                    {
                                        "type": 0,
                                        "name": "login_label",
                                        "label": "Login label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 6
                                    },
                                    {
                                        "type": 0,
                                        "name": "login_alert",
                                        "label": "No login alert",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 7
                                    },
                                    {
                                        "type": 0,
                                        "name": "password_label",
                                        "label": "Password label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 9
                                    },
                                    {
                                        "type": 0,
                                        "name": "password_alert",
                                        "label": "No password alert",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 10
                                    },
                                    {
                                        "type": 0,
                                        "name": "password_confirmation_label",
                                        "label": "Password confirmation label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 11
                                    },
                                    {
                                        "type": 0,
                                        "name": "password_confirmation_alert",
                                        "label": "No password confirmation match alert",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 12
                                    },
                                    {
                                        "type": 0,
                                        "name": "email_label",
                                        "label": "Email label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 14
                                    },
                                    {
                                        "type": 0,
                                        "name": "email_alert",
                                        "label": "No email alert",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 16
                                    },
                                    {
                                        "type": 0,
                                        "name": "form_button_label",
                                        "label": "Register button label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 16
                                    },
                                    {
                                        "type": 0,
                                        "name": "registration_button_label",
                                        "label": "Registration button label",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 5
                                    },
                                    {
                                        "type": 0,
                                        "name": "login_exists_alert",
                                        "label": "Login already exists alert",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 8
                                    },
                                    {
                                        "type": 4,
                                        "name": "email_confirmation",
                                        "label": "Email confirmation",
                                        "definition": {
                                            "placeholder": 0,
                                            "defvalue": "0"
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 15
                                    },
                                    {
                                        "type": 9,
                                        "name": "ec_smtp",
                                        "label": "SMTP settings",
                                        "definition": {
                                            "placeholder": 0,
                                            "fields": [
                                                {
                                                    "type": 0,
                                                    "name": "host",
                                                    "label": "SMTP host",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                },
                                                {
                                                    "type": 0,
                                                    "name": "port",
                                                    "label": "SMTP port",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                }
                                            ]
                                        },
                                        "hideCondition": "parent.enabled == \"0\" || parent.email_confirmation == \"0\"",
                                        "order": 17
                                    },
                                    {
                                        "type": 9,
                                        "name": "ec_request_page",
                                        "label": "Email confirmation request page",
                                        "definition": {
                                            "placeholder": 0,
                                            "fields": [
                                                {
                                                    "type": 2,
                                                    "name": "content",
                                                    "label": "Content",
                                                    "definition": {
                                                        "placeholder": 0
                                                    },
                                                    "order": 3
                                                },
                                                {
                                                    "type": 0,
                                                    "name": "title",
                                                    "label": "Title",
                                                    "definition": {
                                                        "placeholder": 0,
                                                        "defvalue": "Registration"
                                                    },
                                                    "order": 2
                                                }
                                            ]
                                        },
                                        "hideCondition": "parent.enabled == \"0\" || parent.email_confirmation == \"0\"",
                                        "order": 16
                                    },
                                    {
                                        "type": 9,
                                        "name": "ec_email",
                                        "label": "Email",
                                        "definition": {
                                            "placeholder": 0,
                                            "fields": [
                                                {
                                                    "type": 0,
                                                    "name": "sender",
                                                    "label": "Sender email address",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                },
                                                {
                                                    "type": 0,
                                                    "name": "subject",
                                                    "label": "Email subject",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                },
                                                {
                                                    "type": 2,
                                                    "name": "paragraph",
                                                    "label": "Email paragraph",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                },
                                                {
                                                    "type": 0,
                                                    "name": "url",
                                                    "label": "Confirmation URL",
                                                    "definition": {
                                                        "placeholder": 0
                                                    }
                                                }
                                            ]
                                        },
                                        "hideCondition": "parent.enabled == \"0\" || parent.email_confirmation == \"0\"",
                                        "order": 20
                                    },
                                    {
                                        "type": 9,
                                        "name": "ec_successful_page",
                                        "label": "Email confirmation successful page",
                                        "definition": {
                                            "placeholder": 0,
                                            "fields": [
                                                {
                                                    "type": 2,
                                                    "name": "content",
                                                    "label": "Content",
                                                    "definition": {
                                                        "placeholder": 0
                                                    },
                                                    "order": 3
                                                },
                                                {
                                                    "type": 0,
                                                    "name": "title",
                                                    "label": "Title",
                                                    "definition": {
                                                        "placeholder": 0,
                                                        "defvalue": "Registration"
                                                    },
                                                    "order": 2
                                                }
                                            ]
                                        },
                                        "order": 19,
                                        "hideCondition": "parent.enabled == \"0\" || parent.email_confirmation == \"0\""
                                    },
                                    {
                                        "type": 0,
                                        "name": "title",
                                        "label": "Title",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.enabled == \"0\"",
                                        "order": 3
                                    },
                                    {
                                        "type": 8,
                                        "name": "info_test",
                                        "label": "Info page subtest",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "order": 1,
                                        "hideCondition": "parent.enabled == \"0\""
                                    },
                                    {
                                        "type": 8,
                                        "name": "form_test",
                                        "label": "Form page subtest",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "order": 2,
                                        "hideCondition": "parent.enabled == \"0\""
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 198,
                            "label": "Title",
                            "description": "",
                            "hideCondition": "!values.type",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "DEMO TEST",
                            "testVariable": 46,
                            "name": "title",
                            "wizardStep": 63,
                            "stepTitle": "Authorization",
                            "order": 2,
                            "wizard": 3,
                            "definition": {
                                "placeholder": 0
                            }
                        }
                    ]
                }
            ],
            "test": 3,
            "testName": "source_start_session",
            "updatedOn": "2016-11-21 19:40:43",
            "updatedByName": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "rev": 5,
            "hash": "3fd28ee435fc56177d321b470a7ee7b198dfb739"
        },
        {
            "class_name": "Test",
            "id": 5,
            "name": "source_info",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "if(is.null(template_def) || is.na(template_def) || template_def == \"\") {\n  decoded_template_def = fromJSON(concerto.var.get(\"template_def\"))\n} else {\n  decoded_template_def = fromJSON(template_def)\n}\n\ngetTemplateParams = function(template_params){\n  params = list()\n  if(!is.null(inserts) && is.list(inserts)) {\n    params = inserts\n  }\n  for(key in ls(template_params)) {\n    params[[key]] = template_params[[key]]\n  }\n  return(params)\n}\n\nbuttons = \"\"\nif(button_exists == 1) {\n  buttons = concerto.template.join(templateId=\"buttons_single\",params=list(label=button_label))\n}\n\nresponse = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n  header=decoded_template_def$header,\n  title=title,\n  content=content,\n  buttons=buttons,\n  footer=decoded_template_def$footer,\n  warning_msg=\"\"\n)))",
            "resumable": "0",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 63,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 64,
                    "name": "content",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 65,
                    "name": "button_label",
                    "type": 0,
                    "description": "<p>Label on continue button.<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "continue",
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 66,
                    "name": "response",
                    "type": 1,
                    "description": "<p>Submitted user response<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 67,
                    "name": "inserts",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 68,
                    "name": "button_exists",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "1",
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 69,
                    "name": "title",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 70,
                    "name": "template_def",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 5,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2016-11-21 19:40:43",
            "updatedByName": "",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": false,
            "rev": 3,
            "hash": "5bb24f551f6e5e73e88601e2f05e72e889431b9a"
        },
        {
            "class_name": "TestWizard",
            "id": 4,
            "name": "info",
            "description": "",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 64,
                    "title": "Presentation",
                    "description": "<p>Set info page presentation properties<\/p>\n",
                    "orderNum": 0,
                    "colsNum": 0,
                    "wizard": 4,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 199,
                            "label": "Page content",
                            "description": "<p>Info page content<\/p>\n",
                            "hideCondition": "",
                            "type": 2,
                            "passableThroughUrl": "0",
                            "value": "<p>Page content goes here. For example: Information about your study.<\/p>\n",
                            "testVariable": 64,
                            "name": "content",
                            "wizardStep": 64,
                            "stepTitle": "Presentation",
                            "order": 2,
                            "wizard": 4,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 200,
                            "label": "Button label",
                            "description": "<p>Continue button label text<\/p>\n",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "continue",
                            "testVariable": 65,
                            "name": "button_label",
                            "wizardStep": 64,
                            "stepTitle": "Presentation",
                            "order": 4,
                            "wizard": 4,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 201,
                            "label": "Button exists?",
                            "description": "<p>Check if there should be continue button on the page<\/p>\n",
                            "hideCondition": "",
                            "type": 4,
                            "passableThroughUrl": "0",
                            "value": "1",
                            "testVariable": 68,
                            "name": "button_exists",
                            "wizardStep": 64,
                            "stepTitle": "Presentation",
                            "order": 3,
                            "wizard": 4,
                            "definition": {
                                "placeholder": 0
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 202,
                            "label": "Page Title",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "DEMO TEST",
                            "testVariable": 69,
                            "name": "title",
                            "wizardStep": 64,
                            "stepTitle": "Presentation",
                            "order": 1,
                            "wizard": 4,
                            "definition": {
                                "placeholder": 0
                            }
                        }
                    ]
                }
            ],
            "test": 5,
            "testName": "source_info",
            "updatedOn": "2016-11-21 19:40:43",
            "updatedByName": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "rev": 3,
            "hash": "8d91b6ade94c9433cff33867b9ccbb979a0c9d4d"
        },
        {
            "class_name": "Test",
            "id": 6,
            "name": "info",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "visibility": 2,
            "type": 1,
            "code": "if(is.null(template_def) || is.na(template_def) || template_def == \"\") {\n  decoded_template_def = fromJSON(concerto.var.get(\"template_def\"))\n} else {\n  decoded_template_def = fromJSON(template_def)\n}\n\ngetTemplateParams = function(template_params){\n  params = list()\n  if(!is.null(inserts) && is.list(inserts)) {\n    params = inserts\n  }\n  for(key in ls(template_params)) {\n    params[[key]] = template_params[[key]]\n  }\n  return(params)\n}\n\nbuttons = \"\"\nif(button_exists == 1) {\n  buttons = concerto.template.join(templateId=\"buttons_single\",params=list(label=button_label))\n}\n\nresponse = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n  header=decoded_template_def$header,\n  title=title,\n  content=content,\n  buttons=buttons,\n  footer=decoded_template_def$footer,\n  warning_msg=\"\"\n)))",
            "resumable": "0",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 71,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 6,
                    "parentVariable": 63
                },
                {
                    "class_name": "TestVariable",
                    "id": 72,
                    "name": "content",
                    "type": 0,
                    "description": "<p>Info page content<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "<p>Page content goes here. For example: Information about your study.<\/p>\n",
                    "test": 6,
                    "parentVariable": 64
                },
                {
                    "class_name": "TestVariable",
                    "id": 73,
                    "name": "button_label",
                    "type": 0,
                    "description": "<p>Continue button label text<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "continue",
                    "test": 6,
                    "parentVariable": 65
                },
                {
                    "class_name": "TestVariable",
                    "id": 74,
                    "name": "response",
                    "type": 1,
                    "description": "<p>Submitted user response<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 66
                },
                {
                    "class_name": "TestVariable",
                    "id": 75,
                    "name": "inserts",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 67
                },
                {
                    "class_name": "TestVariable",
                    "id": 76,
                    "name": "button_exists",
                    "type": 0,
                    "description": "<p>Check if there should be continue button on the page<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "1",
                    "test": 6,
                    "parentVariable": 68
                },
                {
                    "class_name": "TestVariable",
                    "id": 77,
                    "name": "title",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "DEMO TEST",
                    "test": 6,
                    "parentVariable": 69
                },
                {
                    "class_name": "TestVariable",
                    "id": 78,
                    "name": "template_def",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 6,
                    "parentVariable": 70
                }
            ],
            "sourceWizard": 4,
            "sourceWizardName": "info",
            "sourceWizardTest": 5,
            "sourceWizardTestName": "source_info",
            "updatedOn": "2016-11-21 19:41:25",
            "updatedByName": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "_concerto_core",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "rev": 3,
            "hash": "72ffe74450713fe4b8727b3b20a9a8f75121cde8"
        },
        {
            "class_name": "Test",
            "id": 1,
            "name": "source_form",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "visibility": 2,
            "type": 0,
            "code": "if(is.null(template_def) || is.na(template_def) || template_def == \"\") {\n  decoded_template_def = fromJSON(concerto.var.get(\"template_def\"))\n} else {\n  decoded_template_def = fromJSON(template_def)\n}\n\nisValid = function(type, value, condition, form, response) {\n  valid = T\n  if(!is.null(response)) {\n    env_vld = new.env()\n    if(length(form) > 0) {\n      for(i in 1:length(form)) {\n        v = response[[form[[i]]$name]]\n        assign(form[[i]]$name, v, envir=env_vld)\n      }\n    }\n\n    res = try(eval(parse(text=condition), envir=env_vld), T)\n    if(!is.null(res) && res == T) {\n      valid = T\n    }\n    if(!is.null(res) && res == F) {\n      valid = F\n    }\n  }\n  return(valid)\n}\n\ngetContent = function(paragraph, form, response) {\n  content = paragraph\n  if(length(form) > 0) {\n    for(i in 1:length(form)) {\n      type = form[[i]]$definition$type\n      value = response[[form[[i]]$name]]\n      if(is.null(value)) {\n        value = form[[i]]$default\n      }\n      if(is.null(value)) {\n        value = \"\"\n      }\n      condition = form[[i]]$validation\n      valid = isValid(type, value, condition, form, response)\n      id = paste0(\"form\",i)\n      name = form[[i]]$name\n      label = form[[i]]$label\n      control = \"\"\n\n      if(type == \"singleline\") {\n        control = concerto.template.join(templateId=\"form_field_input\",params=list(id=id,name=name,type=\"text\",value=value))\n      } else if(type == \"password\") {\n        control = concerto.template.join(templateId=\"form_field_input\",params=list(id=id,name=name,type=\"password\",value=value))\n      } else if(type == \"multiline\") {\n        control = concerto.template.join(templateId=\"form_field_multiline\",params=list(id=id,name=name,type=\"password\",value=value))\n      } else if(type == \"select\") {\n        control = concerto.template.join(templateId=\"form_field_select\",params=list(id=id,name=name,options=toJSON(form[[i]]$definition$select_options)))\n      } else if(type == \"checkbox\") {\n        checked = \"\"\n        if(value==\"1\") {\n          checked = \"checked\"\n        }\n        control = concerto.template.join(templateId=\"form_field_checkbox\",params=list(id=id,name=name,attrs=checked))\n      } else if(type == \"slider\") {\n        if(value == \"\") {\n          value = \"null\";\n        }\n        control = concerto.template.join(templateId=\"form_field_slider\",params=list(id=id,name=name,value=value,definition=toJSON(form[[i]]$definition)))\n      }\n        classes = \"\"\n        if(!is.null(response) && !valid) {\n          classes = \"validationHighlight\"\n        }\n        field = concerto.template.join(templateId=\"form_field\",params=list(id=id,label=label,classes=classes,control=control))\n        content = paste0(content, field)\n        }\n        }\n        return(content)\n        }\n\n        getAlert = function(form, response) {\n          alert = NULL\n\n          if(length(form) > 0) {\n            for(i in 1:length(form)) {\n              type = form[[i]]$definition$type\n              value = response[[form[[i]]$name]]\n              condition = form[[i]]$validation\n              valid = isValid(type, value, condition, form, response)\n\n              validationHighlight = \"\"\n              if(!is.null(response) && !valid) {\n                alert = concerto.template.join(templateId=\"form_alert\",params=list(alert=form[[i]]$alert))\n              }\n            }\n          }\n          return(alert)\n        }\n\n        getTemplateParams = function(template_params){\n          params = list()\n          if(!is.null(inserts) && is.list(inserts)) {\n            params = inserts\n          }\n          for(key in ls(template_params)) {\n            params[[key]] = template_params[[key]]\n          }\n          return(params)\n        }\n\n        buttons = concerto.template.join(templateId=\"buttons_single\",params=list(label=button_label))\n\n        content = paragraph\n        form = fromJSON(form)\n\n        if(!is.null(warning_msg) && (is.na(warning_msg) || warning_msg == \"\")) {\n          warning_msg = \"\"\n        }\n\n        response = NULL\n        while(T) {\n          content = getContent(paragraph, form, response)\n          response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n            header=decoded_template_def$header, \n            title=title,\n            content=content, \n            warning_msg=warning_msg, \n            buttons=buttons,\n            footer=decoded_template_def$footer\n          )))\n          warning_msg = getAlert(form, response)\n          if(is.null(warning_msg) || warning_msg == \"\") { break }\n        }\n\n        response$isTimeout <- NULL\n        response$buttonPressed <- NULL\n        response$timeTaken <- NULL",
            "resumable": "0",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 1,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 2,
                    "name": "form",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 3,
                    "name": "button_label",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 4,
                    "name": "paragraph",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 5,
                    "name": "response",
                    "type": 1,
                    "description": "<p><span style=\"line-height: 20.8px;\">Submitted user response R list object<\/span><\/p>",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 6,
                    "name": "inserts",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 7,
                    "name": "warning_msg",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 8,
                    "name": "title",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                },
                {
                    "class_name": "TestVariable",
                    "id": 9,
                    "name": "template_def",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 1,
                    "parentVariable": null
                }
            ],
            "sourceWizard": null,
            "sourceWizardName": null,
            "sourceWizardTest": null,
            "sourceWizardTestName": null,
            "updatedOn": "2016-11-21 19:40:42",
            "updatedByName": "",
            "nodes": [],
            "nodesConnections": [],
            "tags": "",
            "owner": 1,
            "groups": "",
            "starterContent": false,
            "rev": 3,
            "hash": "9588fe44369ef97c9ae55e945c50929a2d3afb49"
        },
        {
            "class_name": "TestWizard",
            "id": 1,
            "name": "form",
            "description": "",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 65,
                    "title": "Presentation",
                    "description": "<p>Visual presentation of form page<\/p>\n",
                    "orderNum": 0,
                    "colsNum": 0,
                    "wizard": 1,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 203,
                            "label": "Button label",
                            "description": "<p>Continue button label<\/p>\n",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "continue",
                            "testVariable": 3,
                            "name": "button_label",
                            "wizardStep": 65,
                            "stepTitle": "Presentation",
                            "order": 3,
                            "wizard": 1,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 204,
                            "label": "Paragraph",
                            "description": "<p>Form page paragraph<\/p>\n",
                            "hideCondition": "",
                            "type": 2,
                            "passableThroughUrl": "0",
                            "value": "<p>Please answer the questions below:<\/p>\n",
                            "testVariable": 4,
                            "name": "paragraph",
                            "wizardStep": 65,
                            "stepTitle": "Presentation",
                            "order": 2,
                            "wizard": 1,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 205,
                            "label": "Title",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "Page Title e.g. Demographics",
                            "testVariable": 8,
                            "name": "title",
                            "wizardStep": 65,
                            "stepTitle": "Presentation",
                            "order": 1,
                            "wizard": 1,
                            "definition": {
                                "placeholder": 0
                            }
                        }
                    ]
                },
                {
                    "class_name": "TestWizardStep",
                    "id": 66,
                    "title": "Forms",
                    "description": "<p>Forms declaration<\/p>\n",
                    "orderNum": 1,
                    "colsNum": 0,
                    "wizard": 1,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 206,
                            "label": "Form fields",
                            "description": "<p>Form fields list<\/p>\n",
                            "hideCondition": "",
                            "type": 10,
                            "passableThroughUrl": "0",
                            "value": "[{\"name\":\"age\",\"label\":\"How old are you?\",\"validation\":\"age != \\\"\\\"\",\"alert\":\"Please enter your age\",\"default\":\"\",\"definition\":{\"type\":\"singleline\",\"select_options\":[],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}},{\"name\":\"gender\",\"label\":\"What is your gender?\",\"validation\":\"gender != \\\"none\\\"\",\"alert\":\"Please select your gender\",\"default\":\"\",\"definition\":{\"type\":\"select\",\"select_options\":[{\"value\":\"none\",\"label\":\"\"},{\"value\":\"male\",\"label\":\"Male\"},{\"value\":\"female\",\"label\":\"Female\"}],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}},{\"name\":\"email_address\",\"label\":\"What is your email address?\",\"validation\":\"grepl(\\\"\\\\\\\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\\\\\.[A-Z]{2,}\\\\\\\\>\\\", as.character(email_address), ignore.case=TRUE)\",\"alert\":\"Please enter a valid email address\",\"default\":\"\",\"definition\":{\"type\":\"singleline\",\"select_options\":[],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}}]",
                            "testVariable": 2,
                            "name": "form",
                            "wizardStep": 66,
                            "stepTitle": "Forms",
                            "order": 0,
                            "wizard": 1,
                            "definition": {
                                "placeholder": "0",
                                "element": {
                                    "type": 9,
                                    "definition": {
                                        "placeholder": "0",
                                        "fields": [
                                            {
                                                "type": "0",
                                                "name": "name",
                                                "label": "Name",
                                                "definition": {
                                                    "placeholder": "0"
                                                }
                                            },
                                            {
                                                "type": "0",
                                                "name": "label",
                                                "label": "Label",
                                                "definition": {
                                                    "placeholder": "0"
                                                }
                                            },
                                            {
                                                "type": 0,
                                                "name": "validation",
                                                "label": "Validation",
                                                "definition": {
                                                    "placeholder": "0"
                                                }
                                            },
                                            {
                                                "type": "0",
                                                "name": "alert",
                                                "label": "Validation alert",
                                                "hideCondition": "parent.validation == \"\"",
                                                "definition": {
                                                    "placeholder": "0"
                                                }
                                            },
                                            {
                                                "type": 0,
                                                "name": "default",
                                                "label": "Default value",
                                                "definition": {
                                                    "placeholder": 0
                                                }
                                            },
                                            {
                                                "type": 9,
                                                "name": "definition",
                                                "label": "Definition",
                                                "definition": {
                                                    "placeholder": 0,
                                                    "fields": [
                                                        {
                                                            "type": 10,
                                                            "name": "select_options",
                                                            "label": "Options",
                                                            "definition": {
                                                                "placeholder": 0,
                                                                "element": {
                                                                    "type": 9,
                                                                    "definition": {
                                                                        "placeholder": 0,
                                                                        "fields": [
                                                                            {
                                                                                "type": 0,
                                                                                "name": "value",
                                                                                "label": "Value",
                                                                                "definition": {
                                                                                    "placeholder": 0
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": 0,
                                                                                "name": "label",
                                                                                "label": "Label",
                                                                                "definition": {
                                                                                    "placeholder": 0
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "hideCondition": "parent.type != \"select\"",
                                                            "order": 1
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "min",
                                                            "label": "Min value",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\"",
                                                            "order": 2
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "max",
                                                            "label": "Max value",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\"",
                                                            "order": 3
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "step",
                                                            "label": "Step",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\"",
                                                            "order": 4
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "label_extreme_left",
                                                            "label": "Left extreme label",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\"",
                                                            "order": 5
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "label_extreme_right",
                                                            "label": "Right extreme label",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\"",
                                                            "order": 6
                                                        },
                                                        {
                                                            "type": 3,
                                                            "name": "type",
                                                            "label": "Type",
                                                            "definition": {
                                                                "placeholder": 0,
                                                                "options": [
                                                                    {
                                                                        "value": "singleline",
                                                                        "label": "Single line"
                                                                    },
                                                                    {
                                                                        "value": "multiline",
                                                                        "label": "Multi line"
                                                                    },
                                                                    {
                                                                        "value": "select",
                                                                        "label": "Drop-down list"
                                                                    },
                                                                    {
                                                                        "value": "checkbox",
                                                                        "label": "Checkbox"
                                                                    },
                                                                    {
                                                                        "value": "password",
                                                                        "label": "Password"
                                                                    },
                                                                    {
                                                                        "value": "slider",
                                                                        "label": "Slider"
                                                                    }
                                                                ]
                                                            },
                                                            "order": 0
                                                        },
                                                        {
                                                            "type": 4,
                                                            "name": "hide_number",
                                                            "label": "Hide Slider Number?",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "order": 7,
                                                            "hideCondition": "parent.type != \"slider\""
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "prefix_text",
                                                            "label": "Prefix text for number, e.g. \"$\" (optional)",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\" || parent.hide_number == \"1\"",
                                                            "order": 8
                                                        },
                                                        {
                                                            "type": 0,
                                                            "name": "suffix_text",
                                                            "label": "Suffix text for number, e.g. \" USD\" - note the extra space (optional)",
                                                            "definition": {
                                                                "placeholder": 0
                                                            },
                                                            "hideCondition": "parent.type != \"slider\" || parent.hide_number == \"1\"",
                                                            "order": 9
                                                        }
                                                    ]
                                                },
                                                "hideCondition": ""
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            ],
            "test": 1,
            "testName": "source_form",
            "updatedOn": "2016-11-21 19:40:42",
            "updatedByName": "",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "rev": 3,
            "hash": "a5198c44a4ba29e72304f66032fa8544a0c4e390"
        },
        {
            "class_name": "Test",
            "id": 7,
            "name": "form",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "visibility": 2,
            "type": 1,
            "code": "if(is.null(template_def) || is.na(template_def) || template_def == \"\") {\n  decoded_template_def = fromJSON(concerto.var.get(\"template_def\"))\n} else {\n  decoded_template_def = fromJSON(template_def)\n}\n\nisValid = function(type, value, condition, form, response) {\n  valid = T\n  if(!is.null(response)) {\n    env_vld = new.env()\n    if(length(form) > 0) {\n      for(i in 1:length(form)) {\n        v = response[[form[[i]]$name]]\n        assign(form[[i]]$name, v, envir=env_vld)\n      }\n    }\n\n    res = try(eval(parse(text=condition), envir=env_vld), T)\n    if(!is.null(res) && res == T) {\n      valid = T\n    }\n    if(!is.null(res) && res == F) {\n      valid = F\n    }\n  }\n  return(valid)\n}\n\ngetContent = function(paragraph, form, response) {\n  content = paragraph\n  if(length(form) > 0) {\n    for(i in 1:length(form)) {\n      type = form[[i]]$definition$type\n      value = response[[form[[i]]$name]]\n      if(is.null(value)) {\n        value = form[[i]]$default\n      }\n      if(is.null(value)) {\n        value = \"\"\n      }\n      condition = form[[i]]$validation\n      valid = isValid(type, value, condition, form, response)\n      id = paste0(\"form\",i)\n      name = form[[i]]$name\n      label = form[[i]]$label\n      control = \"\"\n\n      if(type == \"singleline\") {\n        control = concerto.template.join(templateId=\"form_field_input\",params=list(id=id,name=name,type=\"text\",value=value))\n      } else if(type == \"password\") {\n        control = concerto.template.join(templateId=\"form_field_input\",params=list(id=id,name=name,type=\"password\",value=value))\n      } else if(type == \"multiline\") {\n        control = concerto.template.join(templateId=\"form_field_multiline\",params=list(id=id,name=name,type=\"password\",value=value))\n      } else if(type == \"select\") {\n        control = concerto.template.join(templateId=\"form_field_select\",params=list(id=id,name=name,options=toJSON(form[[i]]$definition$select_options)))\n      } else if(type == \"checkbox\") {\n        checked = \"\"\n        if(value==\"1\") {\n          checked = \"checked\"\n        }\n        control = concerto.template.join(templateId=\"form_field_checkbox\",params=list(id=id,name=name,attrs=checked))\n      } else if(type == \"slider\") {\n        if(value == \"\") {\n          value = \"null\";\n        }\n        control = concerto.template.join(templateId=\"form_field_slider\",params=list(id=id,name=name,value=value,definition=toJSON(form[[i]]$definition)))\n      }\n        classes = \"\"\n        if(!is.null(response) && !valid) {\n          classes = \"validationHighlight\"\n        }\n        field = concerto.template.join(templateId=\"form_field\",params=list(id=id,label=label,classes=classes,control=control))\n        content = paste0(content, field)\n        }\n        }\n        return(content)\n        }\n\n        getAlert = function(form, response) {\n          alert = NULL\n\n          if(length(form) > 0) {\n            for(i in 1:length(form)) {\n              type = form[[i]]$definition$type\n              value = response[[form[[i]]$name]]\n              condition = form[[i]]$validation\n              valid = isValid(type, value, condition, form, response)\n\n              validationHighlight = \"\"\n              if(!is.null(response) && !valid) {\n                alert = concerto.template.join(templateId=\"form_alert\",params=list(alert=form[[i]]$alert))\n              }\n            }\n          }\n          return(alert)\n        }\n\n        getTemplateParams = function(template_params){\n          params = list()\n          if(!is.null(inserts) && is.list(inserts)) {\n            params = inserts\n          }\n          for(key in ls(template_params)) {\n            params[[key]] = template_params[[key]]\n          }\n          return(params)\n        }\n\n        buttons = concerto.template.join(templateId=\"buttons_single\",params=list(label=button_label))\n\n        content = paragraph\n        form = fromJSON(form)\n\n        if(!is.null(warning_msg) && (is.na(warning_msg) || warning_msg == \"\")) {\n          warning_msg = \"\"\n        }\n\n        response = NULL\n        while(T) {\n          content = getContent(paragraph, form, response)\n          response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n            header=decoded_template_def$header, \n            title=title,\n            content=content, \n            warning_msg=warning_msg, \n            buttons=buttons,\n            footer=decoded_template_def$footer\n          )))\n          warning_msg = getAlert(form, response)\n          if(is.null(warning_msg) || warning_msg == \"\") { break }\n        }\n\n        response$isTimeout <- NULL\n        response$buttonPressed <- NULL\n        response$timeTaken <- NULL",
            "resumable": "0",
            "outdated": "0",
            "description": "",
            "variables": [
                {
                    "class_name": "TestVariable",
                    "id": 79,
                    "name": "out",
                    "type": 2,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "0",
                    "test": 7,
                    "parentVariable": 1
                },
                {
                    "class_name": "TestVariable",
                    "id": 80,
                    "name": "form",
                    "type": 0,
                    "description": "<p>Form fields list<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "[{\"name\":\"age\",\"label\":\"How old are you?\",\"validation\":\"age != \\\"\\\"\",\"alert\":\"Please enter your age\",\"default\":\"\",\"definition\":{\"type\":\"singleline\",\"select_options\":[],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}},{\"name\":\"gender\",\"label\":\"What is your gender?\",\"validation\":\"gender != \\\"none\\\"\",\"alert\":\"Please select your gender\",\"default\":\"\",\"definition\":{\"type\":\"select\",\"select_options\":[{\"value\":\"none\",\"label\":\"\"},{\"value\":\"male\",\"label\":\"Male\"},{\"value\":\"female\",\"label\":\"Female\"}],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}},{\"name\":\"email_address\",\"label\":\"What is your email address?\",\"validation\":\"grepl(\\\"\\\\\\\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\\\\\.[A-Z]{2,}\\\\\\\\>\\\", as.character(email_address), ignore.case=TRUE)\",\"alert\":\"Please enter a valid email address\",\"default\":\"\",\"definition\":{\"type\":\"singleline\",\"select_options\":[],\"min\":\"\",\"max\":\"\",\"step\":\"\",\"label_extreme_left\":\"\",\"label_extreme_right\":\"\",\"hide_number\":\"0\",\"prefix_text\":\"\",\"suffix_text\":\"\"}}]",
                    "test": 7,
                    "parentVariable": 2
                },
                {
                    "class_name": "TestVariable",
                    "id": 81,
                    "name": "button_label",
                    "type": 0,
                    "description": "<p>Continue button label<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "continue",
                    "test": 7,
                    "parentVariable": 3
                },
                {
                    "class_name": "TestVariable",
                    "id": 82,
                    "name": "paragraph",
                    "type": 0,
                    "description": "<p>Form page paragraph<\/p>\n",
                    "passableThroughUrl": "0",
                    "value": "<p>Please answer the questions below:<\/p>\n",
                    "test": 7,
                    "parentVariable": 4
                },
                {
                    "class_name": "TestVariable",
                    "id": 83,
                    "name": "response",
                    "type": 1,
                    "description": "<p><span style=\"line-height: 20.8px;\">Submitted user response R list object<\/span><\/p>",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": 5
                },
                {
                    "class_name": "TestVariable",
                    "id": 84,
                    "name": "inserts",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": 6
                },
                {
                    "class_name": "TestVariable",
                    "id": 85,
                    "name": "warning_msg",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": 7
                },
                {
                    "class_name": "TestVariable",
                    "id": 86,
                    "name": "title",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": "Page Title e.g. Demographics",
                    "test": 7,
                    "parentVariable": 8
                },
                {
                    "class_name": "TestVariable",
                    "id": 87,
                    "name": "template_def",
                    "type": 0,
                    "description": "",
                    "passableThroughUrl": "0",
                    "value": null,
                    "test": 7,
                    "parentVariable": 9
                }
            ],
            "sourceWizard": 1,
            "sourceWizardName": "form",
            "sourceWizardTest": 1,
            "sourceWizardTestName": "source_form",
            "updatedOn": "2016-11-21 19:41:27",
            "updatedByName": "admin",
            "nodes": [],
            "nodesConnections": [],
            "tags": "_concerto_core",
            "owner": 1,
            "groups": "",
            "starterContent": true,
            "rev": 3,
            "hash": "d7dfdefa8dbf2407fe5ea4818188c52486279351"
        }
    ]
}